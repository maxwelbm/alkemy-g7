// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	model "github.com/maxwelbm/alkemy-g7.git/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// MockICarrierService is an autogenerated mock type for the ICarrierService type
type MockICarrierService struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: id
func (_m *MockICarrierService) GetByID(id int) (model.Carries, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetByID")
	}

	var r0 model.Carries
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (model.Carries, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) model.Carries); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(model.Carries)
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// PostCarrier provides a mock function with given fields: newCarrier
func (_m *MockICarrierService) PostCarrier(newCarrier model.Carries) (model.Carries, error) {
	ret := _m.Called(newCarrier)

	if len(ret) == 0 {
		panic("no return value specified for PostCarrier")
	}

	var r0 model.Carries
	var r1 error
	if rf, ok := ret.Get(0).(func(model.Carries) (model.Carries, error)); ok {
		return rf(newCarrier)
	}
	if rf, ok := ret.Get(0).(func(model.Carries) model.Carries); ok {
		r0 = rf(newCarrier)
	} else {
		r0 = ret.Get(0).(model.Carries)
	}

	if rf, ok := ret.Get(1).(func(model.Carries) error); ok {
		r1 = rf(newCarrier)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockICarrierService creates a new instance of MockICarrierService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockICarrierService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockICarrierService {
	mock := &MockICarrierService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
