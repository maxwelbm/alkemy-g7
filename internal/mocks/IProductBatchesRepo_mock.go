// Code generated by mockery v2.52.1. DO NOT EDIT.

package mocks

import (
	model "github.com/maxwelbm/alkemy-g7.git/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// MockIProductBatchesRepo is an autogenerated mock type for the IProductBatchesRepo type
type MockIProductBatchesRepo struct {
	mock.Mock
}

// GetByID provides a mock function with given fields: id
func (_m *MockIProductBatchesRepo) GetByID(id int) (model.ProductBatches, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetByID")
	}

	var r0 model.ProductBatches
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (model.ProductBatches, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) model.ProductBatches); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(model.ProductBatches)
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Post provides a mock function with given fields: prodBatches
func (_m *MockIProductBatchesRepo) Post(prodBatches *model.ProductBatches) (model.ProductBatches, error) {
	ret := _m.Called(prodBatches)

	if len(ret) == 0 {
		panic("no return value specified for Post")
	}

	var r0 model.ProductBatches
	var r1 error
	if rf, ok := ret.Get(0).(func(*model.ProductBatches) (model.ProductBatches, error)); ok {
		return rf(prodBatches)
	}
	if rf, ok := ret.Get(0).(func(*model.ProductBatches) model.ProductBatches); ok {
		r0 = rf(prodBatches)
	} else {
		r0 = ret.Get(0).(model.ProductBatches)
	}

	if rf, ok := ret.Get(1).(func(*model.ProductBatches) error); ok {
		r1 = rf(prodBatches)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMockIProductBatchesRepo creates a new instance of MockIProductBatchesRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockIProductBatchesRepo(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockIProductBatchesRepo {
	mock := &MockIProductBatchesRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
